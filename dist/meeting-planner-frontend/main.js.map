{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-dash/admin-dash.component.css","webpack:///./src/app/admin-dash/admin-dash.component.html","webpack:///./src/app/admin-dash/admin-dash.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/crud-meeting/create-meeting/create-meeting.component.css","webpack:///./src/app/crud-meeting/create-meeting/create-meeting.component.html","webpack:///./src/app/crud-meeting/create-meeting/create-meeting.component.ts","webpack:///./src/app/crud-meeting/crud-meeting.module.ts","webpack:///./src/app/crud-meeting/edit-meeting/edit-meeting.component.css","webpack:///./src/app/crud-meeting/edit-meeting/edit-meeting.component.html","webpack:///./src/app/crud-meeting/edit-meeting/edit-meeting.component.ts","webpack:///./src/app/general-dash/general-dash.component.css","webpack:///./src/app/general-dash/general-dash.component.html","webpack:///./src/app/general-dash/general-dash.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/route-guard.service.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/sort-countries.pipe.ts","webpack:///./src/app/user/email-verify/email-verify.component.css","webpack:///./src/app/user/email-verify/email-verify.component.html","webpack:///./src/app/user/email-verify/email-verify.component.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h3 {\\r\\n    margin: 0 0 10px;\\r\\n}\\r\\n  \\r\\npre {\\r\\n    background-color: #f5f5f5;\\r\\n    padding: 15px;\\r\\n}\\r\\n  \\r\\n.header{\\r\\n    background-color:#b44c55;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n  \\r\\n.header1{\\r\\n    background-color:#181617;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n  \\r\\n.navbar{\\r\\n    cursor: pointer;\\r\\n}\\r\\n  \\r\\n.btn-circle {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    text-align: center;\\r\\n    padding: 6px 0;\\r\\n    font-size: 12px;\\r\\n    line-height: 1.42;\\r\\n    border-radius: 15px;\\r\\n}\\r\\n  \\r\\n.btn-circle.btn-lg {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    padding: 10px 16px;\\r\\n    font-size: 18px;\\r\\n    line-height: 1.33;\\r\\n    border-radius: 25px;\\r\\n}\\r\\n  \\r\\n.own-navbar{\\r\\n    padding-bottom: 1vh;\\r\\n}\\r\\n  \\r\\n#card-design{\\r\\n    cursor:pointer;\\r\\n}\\r\\n  \\r\\n#card-design:hover{\\r\\n    background-color: lightblue;\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Details</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                  <h5> Title </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.title}} by {{modalData?.event.hostName}}</h6>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                  <h5> Purpose </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.purpose}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Guest </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingWithName}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Date and Time</h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.startDate | date: 'medium'}} - {{modalData?.event.endDate| date: 'medium'}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Venue </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.venue}}</h6>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #modalAlert let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Reminder</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <h6 class=\\\"card-title\\\">Your meeting <span><i> {{modalData?.event.title}} </i></span> will start soon!</h6>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"close(); remindMe=true\\\">Snooze</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close(); remindMe=false\\\">Dismiss</button>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #modalConfirmation let-close=\\\"close\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\">Delete Meeting</h5>\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <h6 class=\\\"card-title\\\">Are you sure you want to delete the following meeting?</h6>\\n      <h4 class=\\\"card-title\\\">{{modalData?.event.title}}</h4>\\n    </div>\\n  \\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn btn-danger\\\" (click)=\\\"deleteMeeting(modalData?.event);close()\\\">Delete</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<br>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row text-center border-bottom border-info\\\">\\n\\n    <div class=\\\"col-12 own-navbar\\\">\\n      <h5 class=\\\"header\\\" [routerLink]=\\\"['/admin']\\\">Meeting Planner - Admin Dashboard</h5>\\n    </div>\\n\\n    <div class=\\\"col-12 own-navbar\\\">\\n      <h5 class=\\\"header1\\\">Welcome {{receiverName ? receiverName : 'User'}}</h5>\\n    </div>\\n\\n    <div class=\\\"col-sm-6 col-md-4 col-lg-4 own-navbar\\\">\\n      <div class=\\\"btn-group\\\">\\n\\n        <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarPreviousView [view]=\\\"view\\\"\\n          [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n          <i class=\\\"fa fa-angle-left\\\"></i>\\n        </button>\\n\\n        <h5>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h5>\\n\\n        <button style=\\\"margin-left: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n          (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n          <i class=\\\"fa fa-angle-right\\\"></i>\\n        </button>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-6 col-md-3 col-lg-3 own-navbar\\\">\\n      <div class=\\\"btn-group\\\">\\n        <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\n          Today\\n        </button>\\n\\n        <select [(ngModel)]=\\\"view\\\" name=\\\"view\\\" class=\\\"form-control\\\">\\n          <option value=\\\"month\\\">Month</option>\\n          <option value=\\\"week\\\">Week</option>\\n          <option value=\\\"day\\\">Day</option>\\n        </select>\\n\\n      </div>\\n\\n\\n    </div>\\n\\n    \\n    <div class=\\\"col-sm-12 col-md-3 col-lg-2 own-navbar\\\">\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\n            <a (click)=\\\"logout()\\\">Logout</a>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-12 col-md-3 col-lg-2 own-navbar\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/createMeeting']\\\">\\n              <a>New Meeting</a>\\n          </button>\\n        </div>\\n    </div>\\n\\n      \\n    <div class=\\\"col-12\\\">\\n      <h4 class=\\\"header1\\\">Normal Users</h4>\\n        <div class=\\\"card my-card\\\" id=\\\"card-design\\\" *ngFor=\\\"let user of normalUsers\\\">\\n            <div class=\\\"card-body p-2\\\" (click)=\\\"getAllMeetings(user.userId)\\\">\\n              <span class=\\\"d-block font-adjust-heading\\\">{{user.firstName}} {{user.lastName}}</span>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n  </div>\\n  <br><br>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 border border-dark\\\" >\\n      <div [ngSwitch]=\\\"view\\\" style=\\\"overflow-y:scroll\\\">\\n        \\n        <mwl-calendar-month-view *ngSwitchCase=\\\"'month'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n          (dayClicked)=\\\"dayClicked($event.day)\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-month-view>\\n\\n        <mwl-calendar-week-view *ngSwitchCase=\\\"'week'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n          (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-week-view>\\n\\n        <mwl-calendar-day-view *ngSwitchCase=\\\"'day'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n          (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-day-view>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//import for services\nimport { AppService } from '../app.service';\nimport { SocketService } from '../socket.service';\n\n//import toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//import Cookies for user identification during page switch\nimport { Cookie } from 'ng2-cookies';\n\nimport {\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  isSameDay,\n  isSameMonth\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'app-admin-dash',\n  templateUrl: './admin-dash.component.html',\n  styleUrls: ['./admin-dash.component.css'],\n  providers: [SocketService]\n})\nexport class AdminDashComponent implements OnInit, OnDestroy  {\n\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n\n  @ViewChild('modalAlert') modalAlert: TemplateRef<any>;\n\n  @ViewChild('modalConfirmation') modalConfirmation: TemplateRef<any>;\n\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event}): void => {\n        //this.handleEvent('Edited', event);\n        this.router.navigate(['/editMeeting', event.meetingId]);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        //this.events = this.events.filter(iEvent => iEvent !== event);\n        //this.router.navigate(['/', event.meetingId]);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n\n  refresh: Subject<any> = new Subject();\n\n  activeDayIsOpen: boolean = true;\n\n\n  //for meeting related variables\n\n  public authToken: any;\n  public receiverId: String;\n  public receiverName: String;\n  public userInfo: any;\n  public events: CalendarEvent[] = [];\n  public meetings:any=[];\n  public remindMe: boolean = true;\n  public onlineUsers:any;\n  public normalUsers:any;\n\n  constructor(\n    private modal: NgbModal,\n    private appService: AppService,\n    private socketService: SocketService,\n    private _route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.userInfo = this.appService.getUserInfoFromLocalstorage();//getting userInfo which was stored in login component\n    console.log(this.userInfo);\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');//getting the authtoken, receiverId, recieverName from cookies which were set in login component.\n    this.receiverName = Cookie.get('receiverName');\n    this.remindMe = true\n    this.verifyUserConfirmation();//function to subscribe to the event which verifies user as online.\n    this.getAllMeetings();\n    this.getAllNormalUsers();\n\n    setInterval(() => {\n      this.meetingReminder();// function to send the reminder to the user\n    }, 5000);//will check for every two minutes\n  }\n\n\n\n\n\n  ngOnDestroy() {\n    this.socketService.exitSocket()\n  }\n\n\n  public getOnlineUserList: any = () => {\n\n    this.socketService.onlineUserList()\n      .subscribe((userListfromdb) => {\n\n        this.onlineUsers = '';\n\n        for (let x in userListfromdb) {\n\n          let temp = { 'userId': x, 'fullName': userListfromdb[x] };\n\n          this.onlineUsers = temp;\n        }\n\n      });//end subscribe\n\n  }//end getOnlineUserList\n\n  public getAllNormalUsers: any = () =>{\n    this.normalUsers='';\n    this.appService.getAllNormalUsers(this.authToken).subscribe(\n      (apiResponse) => {\n        \n        if (apiResponse.status == 200) {\n          this.normalUsers = apiResponse.data;\n          //console.log(this.normalUsers)\n        }\n        else{\n          this.toastr.info(\"No normal user found\");\n        }\n      }\n    );\n\n\n  }\n\n\n  public verifyUserConfirmation: any = () => {\n\n    this.socketService.verifyUser()\n      .subscribe((data) => {\n\n        this.socketService.setUser(this.authToken);//in reply to verify user emitting set-user event with authToken as parameter.\n\n      });//end subscribe\n  }//end verifyUserConfirmation\n\n\n\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({event,newStart,newEnd}: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    if(action === 'Deleted'){\n\n      console.log(action === 'Deleted')\n      this.modalData = { event, action };\n      this.modal.open(this.modalConfirmation, { size: 'sm' });\n    }else{\n      this.modalData = { event, action };\n      this.modal.open(this.modalContent, { size: 'lg' });\n    }\n\n    \n  }\n\n\n  deleteMeeting(event: any): void {\n    console.log(event);    \n    this.appService.deleteMeeting(event, this.authToken).subscribe((apiResponse) => {\n      if (apiResponse.status == 200) {\n        console.log(\"Deleted...\");\n        this.toastr.info(\"Deleted!\", \"Meeting Cancelled\");\n        this.getAllMeetings();\n        let dataForNotify = {\n          message: `Hi ${event.meetingWithName}, ${event.hostName} has cancelled the Meeting - \"${event.title}\". Please check your Calendar/Email`,\n          userId:event.meetingWithId\n        }\n        this.socketService.notifyUpdates(dataForNotify);\n        setTimeout(() => {\n          this.router.navigate(['/admin']);  \n        }, 1000);\n      }\n      else {\n        this.toastr.error(apiResponse.message);\n      }\n    },\n    (error) => {\n        this.toastr.error(\"Some error occured\");\n    });//end subscribe\n\n  }\n\n\n\n  //method to get all meetings of user\n  public getAllMeetings = (userId=this.userInfo.userId) => {\n  \n    this.appService.getAllMeetings(userId,this.authToken).subscribe(\n      (apiResponse) => {\n        \n        if (apiResponse.status == 200) {\n          this.meetings = apiResponse.data;\n          for (let meeting of this.meetings) {\n            meeting.title =  meeting.title;\n            meeting.start = new Date(meeting.startDate);\n            meeting.end = new Date(meeting.endDate); \n            meeting.status = \"snooze\";\n            meeting.actions = this.actions\n            meeting.color = colors.blue;\n          }//end for\n          this.events = this.meetings;\n          this.refresh.next();\n        }\n        else if(apiResponse.message == \"No Meetings Found\"){\n          this.events = [];\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n          this.router.navigate(['/server-error']);\n        }\n      },\n      (error) => {\n        this.toastr.error('Server Error Occured');\n        this.router.navigate(['/server-error']);\n      }\n    );\n  }//end getAdminMeetings\n  \n\n  //method for meeting reminder notification\n  public meetingReminder(): any {\n    let currentTime = new Date().getTime();\n    for (let meeting of this.meetings) {\n\n      if (isSameDay(new Date(), meeting.start) && new Date(meeting.start).getTime() - currentTime <= 60000\n        && new Date(meeting.start).getTime() > currentTime) {\n\n        if (this.remindMe) {\n\n          this.modalData = { action: 'clicked', event: meeting };\n          this.modal.open(this.modalAlert, { size: 'sm' });\n          this.remindMe=false;\n          break;\n        }//end inner if\n\n      }//end if\n      else if(currentTime > new Date(meeting.start).getTime() && \n      new Date(currentTime - meeting.start).getTime()  < 10000){\n        this.toastr.info(`Meeting ${meeting.title} Started!`, `Gentle Reminder`);\n      }  \n    }\n\n  }//end of meetingReminder function\n\n\n\n\n\n  public logout = () => {\n\n    this.appService.logout().subscribe(\n      (apiResponse) => {\n        if (apiResponse.status === 200) {\n          console.log(\"logout called\")\n          localStorage.clear();\n          Cookie.delete('authToken');\n          Cookie.delete('receiverId');\n          Cookie.delete('receiverName');\n          this.socketService.disconnectedSocket();\n          this.socketService.exitSocket();\n          this.router.navigate(['/login']);\n        } else {\n          this.toastr.error(apiResponse.message)\n          this.router.navigate(['/server-error']);\n        } // end condition\n      },\n      (err) => {\n        this.toastr.error('Server error occured')\n        this.router.navigate(['/server-error']);\n      });\n\n  }//end logout\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n<ng4-loading-spinner [loadingText]=\\\"'Please wait...'\\\"></ng4-loading-spinner>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meeting-planner-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//for routing\nimport { RouterModule, Routes } from '@angular/router';\n//for form\nimport { FormsModule } from '@angular/forms';\n\n//for Http service\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { UserModule } from './user/user.module';\nimport { CrudMeetingModule } from './crud-meeting/crud-meeting.module';\nimport { SortCountriesPipe } from './sort-countries.pipe';\n\n\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n//import statement to use font awesome library\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\n//for loading spinner\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { GeneralDashComponent } from './general-dash/general-dash.component';\nimport { AdminDashComponent } from './admin-dash/admin-dash.component';\n\n\n//for angular calendar\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n//import 'flatpickr/dist/flatpickr.css';\n//import { FlatpickrModule } from 'angularx-flatpickr';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\n//for enabling gaurds to routes\nimport { RouteGuardService } from './route-guard.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServerErrorComponent,\n    PageNotFoundComponent,\n    SortCountriesPipe,\n    GeneralDashComponent,\n    AdminDashComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    UserModule,\n    CrudMeetingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    Ng4LoadingSpinnerModule.forRoot(),\n    AngularFontAwesomeModule,\n    NgbModalModule,\n    //FlatpickrModule.forRoot(),\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path:'page-not-found', component: PageNotFoundComponent},\n      { path:'server-error', component:ServerErrorComponent},\n      { path: 'admin', component: AdminDashComponent, canActivate:[RouteGuardService]},\n      { path: 'general', component: GeneralDashComponent, canActivate:[RouteGuardService]},\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [SortCountriesPipe, RouteGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n\n//for using cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n//Importing the required files for http services.\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n//import { Observable } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  private url = 'http://localhost:3008';\n\n  private baseURL = `${this.url}/api/v1`;\n\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  public getUserInfoFromLocalstorage = () => {\n\n    return JSON.parse(localStorage.getItem('userInfo'));\n\n  } // end getUserInfoFromLocalstorage\n\n\n  public setUserInfoInLocalStorage = (data) => {\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }\n\n  public signin(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n\n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  } // end of signinFunction function.\n\n\n\n  //Method to get country list\n  public getCountryList = () => {\n    let response = this.http.get('../assets/countries.json');\n    return response;\n  }//end\n\n  //method to get country code\n  public getCountryCode = () => {\n    let response = this.http.get('../assets/country-code-list.json');\n    return response;\n  }//end\n\n\n  public signup(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobileNumber', data.mobileNumber)\n      .set('email', data.email)\n      .set('password', data.password)\n      .set('userName', data.userName)\n      .set('country', data.country)\n      .set('isAdmin', data.isAdmin)\n\n    return this.http.post(`${this.baseURL}/users/signup`, params);\n\n  } // end of signupFunction function.\n\n\n  //Method to verify email\n  public verifyEmail = (data): Observable<any> => {\n    return this.http.get(`${this.baseURL}/users/${data}/verifyUser`);\n  }\n  //end method\n\n  public sendResetLink(email): Observable<any> {\n    const params = new HttpParams()\n      .set('email', email)\n    return this.http.post(`${this.baseURL}/users/forgotPassword`, params);\n  } // end of sendResetLink function.\n\n\n  public resetPassword(data: any): Observable<any> {\n    const params = new HttpParams()\n      .set('userId', data.userId)\n      .set('password', data.password);\n    return this.http.post(`${this.baseURL}/users/resetPassword`, params);\n\n  }//end resetPassword Function\n\n\n  //Get All Users:\n  public getAllNormalUsers = (token): Observable<any> => {\n    return this.http.get(`${this.baseURL}/users/view/allUsers?authToken=${token}`)\n  }\n\n\n\n  /**\n   * Meeting related services\n   */\n\n  //for getting all meetings\n  public getAllMeetings(userId:string,token): Observable<any> {\n    return this.http.get(`${this.baseURL}/meetings/${userId}/getAllMeetings?authToken=${token}`);\n  }//end getAllMeetings function \n\n\n\n  //for getting meeting details\n  public getMeeting(meetingId:string,token): Observable<any> {\n    return this.http.get(`${this.baseURL}/meetings/${meetingId}/getMeeting?authToken=${token}`);\n  }//end getMeeting function \n  \n\n\n\n  //for edit meeting details\n  public editMeeting(data,token): Observable<any> {\n    \n    const params = new HttpParams()\n      .set('hostId', data.hostId)\n      .set('hostName', data.hostName)\n      .set('startDate', data.startDate)\n      .set('endDate', data.endDate)\n      .set('title', data.title)\n      .set('venue',data.venue)\n      .set('meetingWithId',data.meetingWithId)\n      .set('meetingWithName',data.meetingWithName)\n      .set('purpose', data.purpose)\n      .set('meetingWithEmail',data.meetingWithEmail)\n\n    return this.http.post(`${this.baseURL}/meetings/${data.meetingId}/editMeeting?authToken=${token}`,params);\n  }//end editMeeting function \n  \n\n  //for create meeting\n  public createMeeting(data,token): Observable<any> {\n    \n    const params = new HttpParams()\n      .set('hostId', data.hostId)\n      .set('hostName', data.hostName)\n      .set('startDate', data.startDate)\n      .set('endDate', data.endDate)\n      .set('title', data.title)\n      .set('venue',data.venue)\n      .set('meetingWithId',data.meetingWithId)\n      .set('meetingWithName',data.meetingWithName)\n      .set('purpose', data.purpose)\n      .set('meetingWithEmail',data.meetingWithEmail)\n\n    return this.http.post(`${this.baseURL}/meetings/createMeeting?authToken=${token}`,params);\n  }//end editMeeting function \n  \n  //for delete meeting\n  public deleteMeeting(data,token): Observable<any> {\n    return this.http.post(`${this.baseURL}/meetings/${data.meetingId}/deleteMeeting?authToken=${token}`,data);\n  }//end deleteMeeting function \n  \n\n\n  public logout(): Observable<any> {\n    const params = new HttpParams()\n    .set('authToken', Cookie.get('authToken'));\n    let userdetails = this.getUserInfoFromLocalstorage();\n    return this.http.post(`${this.baseURL}/users/${userdetails.userId}/logout`,params);\n\n  } // end logout function\n\n}\n","module.exports = \".icons{\\r\\n    color:lightblue;\\r\\n}\\r\\n\\r\\n#card-design{\\r\\n    cursor:pointer;\\r\\n}\\r\\n\\r\\n#card-design:hover{\\r\\n    background-color: lightblue;\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.people-list {\\r\\n    height: 30vh;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.own-navbar{\\r\\n  padding-bottom: 1vh;\\r\\n}\\r\\n\\r\\n.item-padding{\\r\\n    padding-bottom: 3vh;\\r\\n}\\r\\n\\r\\n.container{\\r\\n  padding-top: 10px;\\r\\n  margin-top: 10px;\\r\\n  background-color: beige;\\r\\n}\\r\\n\\r\\n.header{\\r\\n  background-color:#19181f;\\r\\n  color: white;\\r\\n  padding: 2%;\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <h2 class=\\\"col-12 header\\\">New Meeting Schedule</h2>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <form #meetingSchedule=\\\"ngForm\\\" class=\\\"col-12\\\">\\n      <span class=\\\"form-heading\\\">Meeting Host</span>\\n\\n      <label for=\\\"inputHostName\\\" class=\\\"sr-only\\\">Meeting Host:</label>\\n\\n      <input type=\\\"text\\\" name=\\\"host\\\" [(ngModel)]=\\\"hostName\\\" class=\\\"form-control\\\" placeholder=\\\"Host Name\\\" readonly>\\n\\n      <br>\\n\\n      <span class=\\\"form-heading\\\">Meeting With </span>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6 col-sm-12\\\">\\n          <label class=\\\"sr-only\\\">Meeting with:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"people-list\\\">\\n              <div class=\\\"card my-card\\\" id=\\\"card-design\\\" *ngFor=\\\"let user of normalUsers\\\">\\n  \\n                <div class=\\\"card-body p-2\\\" (click)=\\\"getSelected(user)\\\">\\n                  <span class=\\\"d-block font-adjust-heading\\\">{{user.firstName}} {{user.lastName}}</span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"col-lg-6 col-sm-12\\\">\\n          <p>Selected User</p>\\n          <div class=\\\"card\\\" *ngIf=\\\"selectedUser\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{selectedUser.firstName}} {{selectedUser.lastName}}</h5>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\t  <br>\\n\\n      <span class=\\\"form-heading\\\">Title </span>\\n\\n      <label for=\\\"inputTitle\\\" class=\\\"sr-only\\\">Title:</label>\\n\\n      <input type=\\\"text\\\" #title1=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z0-9]+$\\\" minlength=\\\"4\\\" name=\\\"title\\\" id=\\\"MeetingTitle\\\" class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"title\\\" placeholder=\\\"Meeting Title\\\" required>\\n      <br>\\n\\n      <div [hidden]=\\\"title1.pristine || title1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"title1.errors?.pattern\\\">\\n          ** Meeting Title should start with Capital letter.\\n        </div>\\n        <div *ngIf=\\\"title1.errors?.minlength\\\">\\n          ** Meeting Title should contain minimum 4 Chatracters!\\n        </div>\\n        <div *ngIf=\\\"title1.errors?.required\\\">\\n          ** Meeting Title is required!\\n        </div>\\n\\n      </div>\\n\\n      <span class=\\\"form-heading\\\">Start Time </span>\\n\\n      <label for=\\\"startTime\\\" class=\\\"sr-only\\\">Start Time:</label>\\n      <input [owlDateTime]=\\\"dt1\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"startDate\\\" placeholder=\\\"Date Time\\\" required>\\n      <span [owlDateTimeTrigger]=\\\"dt1\\\">\\n        <i class=\\\"fa fa-calendar\\\"></i>\\n      </span>\\n      <owl-date-time #dt1></owl-date-time>\\n      \\n      <br>\\n      <br>\\n\\n      <span class=\\\"form-heading\\\">End Time </span>\\n\\n      <label for=\\\"endTime\\\" class=\\\"sr-only\\\">End Time:</label>\\n      <input [owlDateTime]=\\\"dt2\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"endDate\\\" placeholder=\\\"Date Time\\\" required>\\n      <span [owlDateTimeTrigger]=\\\"dt2\\\">\\n        <i class=\\\"fa fa-calendar\\\"></i>\\n      </span>\\n      <owl-date-time #dt2></owl-date-time>\\n\\n      <br>\\n      <br>\\n\\n\\n      <div *ngIf=\\\"validateDate(startDate,endDate)\\\" class=\\\"alert alert-danger\\\">\\n        * End Date/Time cannot be before Start Date/Time.\\n      </div>\\n\\n\\n      <span class=\\\"form-heading\\\">Venue </span>\\n\\n      <label for=\\\"venue\\\" class=\\\"sr-only\\\">Venue:</label>\\n\\n      <input type=\\\"text\\\" #venue1=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z0-9-,. ]+$\\\" minlength=\\\"4\\\" name=\\\"venue\\\" [(ngModel)]=\\\"venue\\\" class=\\\"form-control\\\"\\n        id=\\\"venue\\\" placeholder=\\\"Where to Meet\\\" required>\\n      <br>\\n\\n      <div [hidden]=\\\"venue1.pristine || venue1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"venue1.errors?.pattern\\\">\\n          ** Venue Name should only start with Capital and contain letters,numbers,hyphen,comma,fullstop !\\n        </div>\\n        <div *ngIf=\\\"venue1.errors?.minlength\\\">\\n          ** Venue Name should be of minimum 4 Characters!\\n        </div>\\n        <div *ngIf=\\\"venue1.errors?.required\\\">\\n          ** Venue Name is required!\\n        </div>\\n\\n      </div>\\n\\n      <span class=\\\"form-heading\\\">Purpose </span>\\n\\n      <label for=\\\"inputPurpose\\\" class=\\\"sr-only\\\">Purpose:</label>\\n\\n      <input type=\\\"text\\\" #purpose1=\\\"ngModel\\\" name=\\\"purpose\\\" [(ngModel)]=\\\"purpose\\\" class=\\\"form-control\\\" id=\\\"inputPurpose\\\" placeholder=\\\"Purpose of the Meeting\\\"\\n        required>\\n      <br/>\\n      <div [hidden]=\\\"purpose1.pristine || purpose1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"purpose1.errors?.required\\\">\\n          ** Purpose is required!\\n        </div>\\n      </div>\\n      <div>\\n        <button class=\\\"col-6 btn btn-success\\\" (click)=\\\"scheduleMeeting()\\\">Arrange</button>\\n        <button class=\\\"col-6 btn btn-info\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n      </div>\\n\\n\\n      <br>\\n    </form>\\n\\n  </div>\\n\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//import for services\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\nimport { Cookie } from 'ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-create-meeting',\n  templateUrl: './create-meeting.component.html',\n  styleUrls: ['./create-meeting.component.css']\n})\nexport class CreateMeetingComponent implements OnInit {\n\n  public authToken:any;\n  public meetingWithName: string;\n  public meetingWithId: string;\n  public venue: string;\n  public purpose: string;\n  public title: string;\n  public endDate: any;\n  public startDate: any;\n  public hostId: string;\n  public hostName: string;\n  public userInfo:any;\n  public normalUsers:any;\n  public selectedUser: any;\n\n\n  constructor(\n    private appService: AppService,\n    private socketService: SocketService,\n    private _route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.authToken = Cookie.get('authToken');    \n    this.hostId = Cookie.get('receiverId');\n    this.hostName = Cookie.get('receiverName');//getting the receiverId, name to use as the meeting partners.\n    this.userInfo = this.appService.getUserInfoFromLocalstorage();//getting the details of the admin from local storage.\n    if(!this.userInfo.isAdmin){\n      this.router.navigate(['/general']);//checking is the user reached here is not admin then redirect to normal user dashboard.\n    }\n    this.getAllNormalUsers();\n  }\n\n\n  public getSelected = (user) => {\n    this.selectedUser = user\n  }\n\n\n  public validateDate(startDate:any, endDate:any):boolean {//method to validate the the start and end date of meeting .\n\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n\n    if(end < start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n  //scheduling new meeting\n  public scheduleMeeting = () => {\n\n    if(!this.selectedUser){\n      this.toastr.warning(\"Please select guest user\", \"Warning!\");\n    }else if(!this.title){\n      this.toastr.warning(\"Title is required\", \"Warning!\");\n    }else if(!this.startDate){\n      this.toastr.warning(\"Start time is required\", \"Warning!\");\n    }else if(!this.endDate){\n      this.toastr.warning(\"End time is required\", \"Warning!\");\n    }else if(!this.venue){\n      this.toastr.warning(\"Meeting venue is required\", \"Warning!\");\n    }else{\n        let data:any = { };\n\n        data.hostId = this.hostId;\n        data.hostName = this.hostName;\n        data.startDate = this.startDate.getTime();\n        data.endDate = this.endDate.getTime();//changing the date&time to number of miliseconds before sending to database.\n        data.title = this.title;\n        data.purpose = this.purpose;\n        data.venue = this.venue;\n        data.meetingWithId = this.selectedUser.userId;\n        data.meetingWithName = `${this.selectedUser.firstName} ${this.selectedUser.lastName}`;\n        data.meetingWithEmail = this.selectedUser.email;\n    \n      \n        this.appService.createMeeting(data, this.authToken).subscribe((apiResponse:any)=>{\n          if(apiResponse.status==200){\n            this.toastr.success(\"Success!\",\"Meeting Scheduled\");\n            let dataForNotify = {\n              message: `Hi ${this.selectedUser.firstName} ${this.selectedUser.lastName}, ${this.hostName} has schedule the Meeting - ${data.title}. Please check your Calendar/Email`,\n              userId:this.selectedUser.userId\n            }\n            this.socketService.notifyUpdates(dataForNotify);\n            setTimeout(() => {\n              this.router.navigate(['/admin']);\n            }, 1000);        \n          }else{\n            this.toastr.error(apiResponse.message);\n          }\n        },\n        (error) => {\n          this.toastr.error(\"Some error occured\");//error page in case of error.\n        }\n      );//end subscribe\n\n    }//end of else\n\n\n\n  }//end scheduleMeeting\n\n  \n  //goBack Method\n  public goBack(): any {//method using the location service to get user back to page from where he reached this page.\n    this.location.back();\n  }//end goBackMethod\n\n\n\n\n  public getAllNormalUsers: any = () =>{\n\n    this.appService.getAllNormalUsers(this.authToken).subscribe(\n      (apiResponse) => {\n        \n        if (apiResponse.status == 200) {\n          this.normalUsers = apiResponse.data;\n        }\n        else{\n          this.toastr.info(\"No normal user found\");\n        }\n      }\n    );\n\n\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n//for routing\nimport { RouterModule, Routes } from '@angular/router';\n//for form\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//for Http service\nimport { HttpClientModule } from '@angular/common/http';\n\n//for toast message\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n//import statement to use font awesome library\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\n\n//for angular calendar\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\n//for picking calendar date\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { CreateMeetingComponent } from './create-meeting/create-meeting.component';\nimport { EditMeetingComponent } from './edit-meeting/edit-meeting.component';\n\n//for enabling gaurd to routes\nimport { RouteGuardService } from '../route-guard.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgbModalModule.forRoot(),\n    //FlatpickrModule.forRoot(),\n    OwlDateTimeModule, \n    OwlNativeDateTimeModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    RouterModule.forChild([\n      { path: 'createMeeting', component:CreateMeetingComponent, canActivate:[RouteGuardService] },\n      { path: 'editMeeting/:meetingId', component: EditMeetingComponent, canActivate:[RouteGuardService] }\n    ])\n  ],\n  declarations: [CreateMeetingComponent, EditMeetingComponent],\n  providers:[ RouteGuardService ]\n})\nexport class CrudMeetingModule { }\n","module.exports = \".container{\\r\\n    padding-top: 10px;\\r\\n    margin-top: 10px;\\r\\n    background-color: beige;\\r\\n}\\r\\n\\r\\n.header{\\r\\n    background-color:#19181f;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <h2 class=\\\"col-12 header\\\">Update Meeting Schedule</h2>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <form #meetingSchedule=\\\"ngForm\\\" class=\\\"col-12\\\">\\n      <span class=\\\"form-heading\\\">Meeting Host </span>\\n\\n      <label for=\\\"inputHostName\\\" class=\\\"sr-only\\\">Meeting Host:</label>\\n\\n      <input type=\\\"text\\\" name=\\\"host\\\" [(ngModel)]=\\\"hostName\\\" class=\\\"form-control\\\" placeholder=\\\"Host Name\\\" readonly>\\n\\n      <br>\\n      <span class=\\\"form-heading\\\">Meeting With </span>\\n\\n      <label for=\\\"inputHostName\\\" class=\\\"sr-only\\\">Meeting with:</label>\\n\\n      <input type=\\\"text\\\" name=\\\"reciever\\\" [(ngModel)]=\\\"meetingWithName\\\" class=\\\"form-control\\\" placeholder=\\\"Meeting With Name\\\" readonly>\\n      <br>\\n\\n      <span class=\\\"form-heading\\\">Title </span>\\n\\n      <label for=\\\"inputTitle\\\" class=\\\"sr-only\\\">Title:</label>\\n\\n      <input type=\\\"text\\\" #title1=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z0-9]+$\\\" minlength=\\\"4\\\" name=\\\"title\\\" id=\\\"MeetingTitle\\\" class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"title\\\" placeholder=\\\"Meeting Title\\\" required>\\n      <br>\\n\\n      <div [hidden]=\\\"title1.pristine || title1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"title1.errors?.pattern\\\">\\n          ** Meeting Title should start with Capital letter.\\n        </div>\\n        <div *ngIf=\\\"title1.errors?.minlength\\\">\\n          ** Meeting Title should contain minimum 4 Chatracters!\\n        </div>\\n        <div *ngIf=\\\"title1.errors?.required\\\">\\n          ** Meeting Title is required!\\n        </div>\\n\\n      </div>\\n\\n      <span class=\\\"form-heading\\\">Start Time </span>\\n\\n      <label for=\\\"startTime\\\" class=\\\"sr-only\\\">Start Time:</label>\\n      <input [owlDateTime]=\\\"dt1\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"startDate\\\" placeholder=\\\"Date Time\\\">\\n      <span [owlDateTimeTrigger]=\\\"dt1\\\">\\n        <i class=\\\"fa fa-calendar\\\"></i>\\n      </span>\\n      <owl-date-time #dt1></owl-date-time>\\n      \\n      <br>\\n      <br>\\n\\n      <span class=\\\"form-heading\\\">End Time </span>\\n\\n      <label for=\\\"endTime\\\" class=\\\"sr-only\\\">End Time:</label>\\n      <input [owlDateTime]=\\\"dt2\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"endDate\\\" placeholder=\\\"Date Time\\\">\\n      <span [owlDateTimeTrigger]=\\\"dt2\\\">\\n        <i class=\\\"fa fa-calendar\\\"></i>\\n      </span>\\n      <owl-date-time #dt2></owl-date-time>\\n\\n      <br>\\n      <br>\\n\\n\\n      <div *ngIf=\\\"validateDate(startDate,endDate)\\\" class=\\\"alert alert-danger\\\">\\n        * End Date/Time cannot be before Start Date/Time.\\n      </div>\\n\\n\\n      <span class=\\\"form-heading\\\">Venue </span>\\n\\n      <label for=\\\"venue\\\" class=\\\"sr-only\\\">Venue:</label>\\n\\n      <input type=\\\"text\\\" #venue1=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z0-9-,. ]+$\\\" minlength=\\\"4\\\" name=\\\"venue\\\" [(ngModel)]=\\\"venue\\\" class=\\\"form-control\\\"\\n        id=\\\"venue\\\" placeholder=\\\"Where to Meet\\\" required>\\n      <br>\\n\\n      <div [hidden]=\\\"venue1.pristine || venue1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"venue1.errors?.pattern\\\">\\n          ** Venue Name should only start with Capital and contain letters,numbers,hyphen,comma,fullstop !\\n        </div>\\n        <div *ngIf=\\\"venue1.errors?.minlength\\\">\\n          ** Venue Name should be of minimum 4 Characters!\\n        </div>\\n        <div *ngIf=\\\"venue1.errors?.required\\\">\\n          ** Venue Name is required!\\n        </div>\\n\\n      </div>\\n\\n      <span class=\\\"form-heading\\\">Purpose</span>\\n\\n      <label for=\\\"inputPurpose\\\" class=\\\"sr-only\\\">Purpose:</label>\\n\\n      <input type=\\\"text\\\" #purpose1=\\\"ngModel\\\" name=\\\"purpose\\\" [(ngModel)]=\\\"purpose\\\" class=\\\"form-control\\\" id=\\\"inputPurpose\\\" placeholder=\\\"Purpose of the Meeting\\\"\\n        required>\\n      <br/>\\n      <div [hidden]=\\\"purpose1.pristine || purpose1.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"purpose1.errors?.required\\\">\\n          ** Purpose is required!\\n        </div>\\n      </div>\\n      <div>\\n        <button class=\\\"col-6 btn btn-success\\\" (click)=\\\"updateScheduleMeeting()\\\">Commit</button>\\n        <button class=\\\"col-6 btn btn-info\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n      </div>\\n\\n\\n      <br>\\n    </form>\\n\\n  </div>\\n\\n</section>\"","import { Component, OnInit ,OnDestroy } from '@angular/core';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//import for services\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\nimport { Cookie } from 'ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-edit-meeting',\n  templateUrl: './edit-meeting.component.html',\n  styleUrls: ['./edit-meeting.component.css'],\n  providers: [SocketService]\n})\nexport class EditMeetingComponent implements OnInit, OnDestroy  {\n\n\n  public authToken:string;\n\n  public purpose: string;\n  public venue: string;\n  public title: string;\n  public endDate: Date;\n  public startDate: Date;\n  public hostId:string;\n  public hostName:string;\n  public userInfo:any;\n  public meetingId:string;\n  public meetingWithId:string;\n  public meetingWithName:string;\n  public meetingWithEmail:string;\n\n  constructor(\n    private appService: AppService,\n    private socketService: SocketService,\n    private _route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    \n    this.hostId = Cookie.get('receiverId');\n    this.hostName = Cookie.get('receiverName');\n    this.authToken = Cookie.get('authToken');\n    this.userInfo = this.appService.getUserInfoFromLocalstorage();\n    this.meetingId = this._route.snapshot.params['meetingId'];\n    this.getMeeting();\n  }\n\n\n  ngOnDestroy() {\n    this.socketService.exitSocket()\n  }\n\n\n  public getMeeting(){\n\n    this.appService.getMeeting(this.meetingId,this.authToken)\n      .subscribe((apiResponse)=>{\n\n        if(apiResponse.status == 200){\n          this.startDate = new Date(apiResponse.data.startDate);\n          this.endDate = new Date(apiResponse.data.endDate);\n          this.title = apiResponse.data.title;\n          this.venue = apiResponse.data.venue;\n          this.purpose = apiResponse.data.purpose;\n          this.meetingWithId = apiResponse.data.meetingWithId;\n          this.meetingWithName = apiResponse.data.meetingWithName;\n          this.meetingWithEmail = apiResponse.data.meetingWithEmail;\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n        }\n      },\n      (error) => {\n        this.toastr.error(\"Some error occured\");\n      });//end subscribe\n  }//end getMeeting\n\n\n  public validateDate(startDate:any, endDate:any):boolean {\n\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n\n    if(end < start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n\n\n  public updateScheduleMeeting(){\n\n    let data:any = { };\n\n    data.hostId = this.hostId;\n    data.hostName = this.hostName;\n    data.startDate = this.startDate.getTime();\n    data.endDate = this.endDate.getTime();\n    data.title = this.title;\n    data.purpose = this.purpose;\n    data.venue = this.venue;\n    data.meetingWithId = this.meetingWithId;\n    data.meetingWithName = this.meetingWithName;\n    data.meetingId = this.meetingId;\n    data.meetingWithEmail = this.meetingWithEmail\n\n\n    this.appService.editMeeting(data, this.authToken)\n      .subscribe((apiResponse) => {\n        if(apiResponse.status == 200){\n          this.toastr.info(\"Success!\",\"Meeting details updated\");\n          let dataForNotify = {\n            message: `Hi ${this.meetingWithName}, ${this.hostName} has reschedule the Meeting - ${data.title}. Please check your Calendar/Email`,\n            userId:this.meetingWithId\n          }\n          this.socketService.notifyUpdates(dataForNotify);\n          setTimeout(() => {\n            this.router.navigate(['/admin']);  \n          }, 1000);\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n        }\n      },\n      (error) => {\n        this.toastr.error(\"Some error occured\");\n      });//end subscribe\n  }//end reSchdeuleMeting\n\n\n\n  //goBack Method\n  public goBack(): any {\n    this.location.back();\n  }//end goBackMethod\n\n}\n\n","module.exports = \"h3 {\\r\\n    margin: 0 0 10px;\\r\\n}\\r\\n  \\r\\npre {\\r\\n    background-color: #f5f5f5;\\r\\n    padding: 15px;\\r\\n}\\r\\n  \\r\\n.header{\\r\\n    background-color:#b44c55;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n  \\r\\n.header1{\\r\\n    background-color:#181617;\\r\\n    color: white;\\r\\n    padding: 2%;\\r\\n    text-align: center;\\r\\n}\\r\\n  \\r\\n.navbar{\\r\\n    cursor: pointer;\\r\\n}\\r\\n  \\r\\n.btn-circle {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    text-align: center;\\r\\n    padding: 6px 0;\\r\\n    font-size: 12px;\\r\\n    line-height: 1.42;\\r\\n    border-radius: 15px;\\r\\n}\\r\\n  \\r\\n.btn-circle.btn-lg {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    padding: 10px 16px;\\r\\n    font-size: 18px;\\r\\n    line-height: 1.33;\\r\\n    border-radius: 25px;\\r\\n}\\r\\n  \\r\\n.own-navbar{\\r\\n    padding-bottom: 1vh;\\r\\n}\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Details</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                  <h5> Title </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.title}} by {{modalData?.event.hostName}}</h6>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                  <h5> Purpose </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.purpose}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Guest </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingWithName}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Date and Time</h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.startDate | date: 'medium'}} - {{modalData?.event.endDate| date: 'medium'}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Venue </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.venue}}</h6>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #modalAlert let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Reminder</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <h6 class=\\\"card-title\\\">Your meeting <span><i> {{modalData?.event.title}} </i></span> will start soon!</h6>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"close(); remindMe=true\\\">Snooze</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close(); remindMe=false\\\">Dismiss</button>\\n  </div>\\n</ng-template>\\n\\n<br>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row text-center border-bottom border-info\\\">\\n\\n    <div class=\\\"col-12 own-navbar\\\">\\n      <h5 class=\\\"header\\\">Meeting Planner - User Dashboard</h5>\\n    </div>\\n\\n    <div class=\\\"col-12 own-navbar\\\">\\n      <h5 class=\\\"header1\\\">Welcome {{receiverName ? receiverName : 'User'}}</h5>\\n    </div>\\n\\n    <div class=\\\"col-sm-6 col-md-4 col-lg-4 own-navbar\\\">\\n      <div class=\\\"btn-group\\\">\\n\\n        <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarPreviousView [view]=\\\"view\\\"\\n          [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n          <i class=\\\"fa fa-angle-left\\\"></i>\\n        </button>\\n\\n        <h5>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h5>\\n\\n        <button style=\\\"margin-left: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n          (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n          <i class=\\\"fa fa-angle-right\\\"></i>\\n        </button>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-6 col-md-3 col-lg-3 own-navbar\\\">\\n      <div class=\\\"btn-group\\\">\\n        <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\n          Today\\n        </button>\\n\\n        <select [(ngModel)]=\\\"view\\\" name=\\\"view\\\" class=\\\"form-control\\\">\\n          <option value=\\\"month\\\">Month</option>\\n          <option value=\\\"week\\\">Week</option>\\n          <option value=\\\"day\\\">Day</option>\\n        </select>\\n\\n      </div>\\n\\n\\n    </div>\\n\\n    \\n    <div class=\\\"col-sm-12 col-md-3 col-lg-2 own-navbar\\\">\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\n            <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-12 border border-dark\\\" >\\n\\n      <div [ngSwitch]=\\\"view\\\" style=\\\"overflow-y:scroll\\\">\\n        <mwl-calendar-month-view *ngSwitchCase=\\\"'month'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n          (dayClicked)=\\\"dayClicked($event.day)\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-month-view>\\n\\n        <mwl-calendar-week-view *ngSwitchCase=\\\"'week'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n          (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-week-view>\\n\\n        <mwl-calendar-day-view *ngSwitchCase=\\\"'day'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\"\\n          (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n        </mwl-calendar-day-view>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//import for services\nimport { AppService } from '../app.service';\nimport { SocketService } from '../socket.service';\n\n//import toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//import Cookies for user identification during page switch\nimport { Cookie } from 'ng2-cookies';\n\nimport {\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef\n} from '@angular/core';\n\n\n\nimport {\n  isSameDay,\n  isSameMonth\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n\n@Component({\n  selector: 'app-general-dash',\n  templateUrl: './general-dash.component.html',\n  styleUrls: ['./general-dash.component.css'],\n  providers: [SocketService]\n})\nexport class GeneralDashComponent implements OnInit, OnDestroy {\n\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n\n  @ViewChild('modalAlert') modalAlert: TemplateRef<any>;\n\n\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  refresh: Subject<any> = new Subject();\n\n  activeDayIsOpen: boolean = true;\n\n\n  //for meeting related variables\n\n  public authToken: any;\n  public receiverId: String;\n  public receiverName: String;\n  public userInfo: any;\n  public events: CalendarEvent[] = [];\n  public meetings:any=[];\n  public remindMe: boolean = true;\n\n\n\n  constructor(\n    private modal: NgbModal,\n    private appService: AppService,\n    private socketService: SocketService,\n    private _route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.userInfo = this.appService.getUserInfoFromLocalstorage();//getting userInfo which was stored in login component\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');//getting the authtoken, receiverId, recieverName from cookies which were set in login component.\n    this.receiverName = Cookie.get('receiverName');\n    this.remindMe = true\n    this.verifyUserConfirmation();//function to subscribe to the event which verifies user as online.\n    this.getAllMeetings();\n\n    setInterval(() => {\n      this.meetingReminder();// function to send the reminder to the user\n    }, 5000);//will check for every two minutes\n\n    this.getUpdatesFromAdmin();\n  }\n\n  public verifyUserConfirmation: any = () => {\n\n    this.socketService.verifyUser()\n      .subscribe((data) => {\n\n        this.socketService.setUser(this.authToken);//in reply to verify user emitting set-user event with authToken as parameter.\n\n      });//end subscribe\n  }//end verifyUserConfirmation\n\n  \n  ngOnDestroy() {\n    this.socketService.exitSocket()\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  eventTimesChanged({event,newStart,newEnd}: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  //method to get all meetings of user\n  public getAllMeetings = (userId=this.userInfo.userId) => {\n  \n    this.appService.getAllMeetings(userId, this.authToken).subscribe(\n      (apiResponse) => {\n        \n        if (apiResponse.status == 200) {\n          this.meetings = apiResponse.data;\n          for (let meeting of this.meetings) {\n            meeting.title =  meeting.title;\n            meeting.start = new Date(meeting.startDate);\n            meeting.end = new Date(meeting.endDate); \n            meeting.status = \"snooze\";\n            meeting.color = colors.red;\n          }//end for\n          this.events = this.meetings;\n          this.refresh.next();\n        }\n        else if(apiResponse.message == \"No Meetings Found\"){\n          this.events = [];\n        }\n        else {\n          this.toastr.error(apiResponse.message);\n          this.router.navigate(['/server-error']);\n        }\n      },\n      (error) => {\n        this.toastr.error('Server Error Occured');\n        this.router.navigate(['/server-error']);\n      }\n    );\n  }//end getAllMeetings\n  \n\n  //method for meeting reminder notification\n  public meetingReminder(): any {\n    let currentTime = new Date().getTime();\n    for (let meeting of this.meetings) {\n\n      if (isSameDay(new Date(), meeting.start) && new Date(meeting.start).getTime() - currentTime <= 60000\n        && new Date(meeting.start).getTime() > currentTime) {\n\n        if (this.remindMe) {\n\n          this.modalData = { action: 'clicked', event: meeting };\n          this.modal.open(this.modalAlert, { size: 'sm' });\n          this.remindMe=false;\n          break;\n        }//end inner if\n\n      }//end if\n      else if(currentTime > new Date(meeting.start).getTime() && \n      new Date(currentTime - meeting.start).getTime()  < 10000){\n        this.toastr.info(`Meeting ${meeting.title} Started!`, `Gentle Reminder`);\n      }  \n    }\n\n  }//end of meetingReminder function\n\n\n\n\n  public logout = () => {\n\n    this.appService.logout().subscribe(\n      (apiResponse) => {\n        if (apiResponse.status === 200) {\n          console.log(\"logout called\")\n          localStorage.clear();\n          Cookie.delete('authToken');\n          Cookie.delete('receiverId');\n          Cookie.delete('receiverName');\n          this.socketService.disconnectedSocket();\n          this.socketService.exitSocket();\n          this.router.navigate(['/login']);\n        } else {\n          this.toastr.error(apiResponse.message)\n          this.router.navigate(['/server-error']);\n        } // end condition\n      },\n      (err) => {\n        this.toastr.error('Server error occured')\n        this.router.navigate(['/server-error']);\n      });\n\n  }//end logout\n\n  //to listen updates from admin from socket\n  public getUpdatesFromAdmin= () =>{\n\n    this.socketService.getUpdatesFromAdmin(this.receiverId).subscribe((data) =>{//getting message from admin.\n      this.getAllMeetings();\n      this.toastr.info(\"Alert form Admin!\",data.message);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-12\\\">\\n        <img src=\\\"../../assets/not_found.jpg\\\" style=\\\"width:102vmin;height:52vmin\\\"\\n          class=\\\"img-fluid d-block mx-auto\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n              User not available, with given email address\\n          </div>\\n        <h5 class=\\\"text-danger\\\">Create account, \\n          <a [routerLink]=\\\"['/signup']\\\">Signup</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate  {\n\n  constructor(private router: Router, public toastr: ToastrService) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    console.log(\"in guard service\");\n\n    if (Cookie.get('authToken') === undefined || Cookie.get('authToken') === '' || Cookie.get('authToken') === null) {\n      this.toastr.error(\"Token Expired, Please login again\");\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-12\\\">\\n        <img src=\\\"https://i.stack.imgur.com/QQOcg.jpg\\\" style=\\\"width:102vmin;height:52vmin\\\"\\n          class=\\\"img-fluid d-block mx-auto\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h5 class=\\\"text-danger\\\">Try Again after email verification\\n            <a [routerLink]=\\\"['/login']\\\">Redirect to Login</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\nimport { Cookie } from 'ng2-cookies';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  public baseurl = \"http://localhost:3008\"\n  public socket;\n\n  constructor(public http: HttpClient) {\n    this.socket = io(this.baseurl)\n  }\n\n    //Authentication Section:\n\n    public verifyUser = () =>{\n      return Observable.create((observer)=>{\n        this.socket.on(\"verify-user\",(socketData)=>{\n          observer.next(socketData)\n        })\n      })\n    }\n  \n    public setUser = (token) => {\n      this.socket.emit(\"set-user\", token)\n    }\n  \n  \n    public onlineUserList = () => {\n  \n      return Observable.create((observer) => {\n  \n        this.socket.on(\"onlineUsers\", (userList) => {\n  \n          observer.next(userList);\n  \n        }); // end Socket\n  \n      }); // end Observable\n  \n    } // end onlineUserList\n\n\n    public notifyUpdates = (data) => {\n      this.socket.emit('notifyUpdates', data);\n    }\n\n\n    public getUpdatesFromAdmin = (userId) => {\n      return Observable.create((observer) => {\n        this.socket.on(userId, (data) => {\n          observer.next(data);\n        }); // end Socket\n      }); // end Observable\n    } // end getUpdatesFromAdmin\n\n\n    public disconnectedSocket = () => {\n\n      this.socket.emit(\"disconnect\",\"\");//end Socket\n  \n    }//end disconnectedSocket\n  \n    public exitSocket = () =>{\n  \n      this.socket.disconnect();\n  \n    }// end exit socket\n  \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortCountries'\n})\nexport class SortCountriesPipe implements PipeTransform {\n\n  transform(array: Array<object>,args?: any): any {\n  \n    if (array == null) {\n      return null;\n    }\n    let finalArray=array.sort((a,b)=>{\n     \n      let textA=a['value'].toLowerCase();\n      let textB=b['value'].toLowerCase();\n      return textA<textB ?-1 : (textA>textB)? 1:0;\n\n    });\n    return finalArray;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"success==1\\\">\\n    <div class=\\\"row mt-5\\\">\\n\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h2 class=\\\"text-success\\\">\\n          <i class=\\\"fa fa-check-circle\\\"></i>Email Verified!</h2>\\n        <h5 class=\\\"text-danger\\\">Thanks for signing up in TO-DO Application. Please\\n          <a [routerLink]=\\\"['/login']\\\">Login</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div>\\n  <!--success end-->\\n  <!---failure start-->\\n  <div *ngIf=\\\"failure==1\\\">\\n    <div class=\\\"row mt-5\\\">\\n\\n    </div>\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h2 class=\\\"text-danger\\\">\\n          <i class=\\\"fa fa-times-circle\\\"></i>Email Not Verified!</h2>\\n        <h5 class=\\\"text-danger\\\">Oops!Some Error Occured!.Please again\\n          <a [routerLink]=\\\"['/signup']\\\">SignUp</a>\\n        </h5>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- failure end -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AppService } from './../../app.service';\n\n@Component({\n  selector: 'app-email-verify',\n  templateUrl: './email-verify.component.html',\n  styleUrls: ['./email-verify.component.css']\n})\nexport class EmailVerifyComponent implements OnInit {\n\n  public data :any;\n  public success:number;\n  public failure:number;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router,public appService: AppService\n  ) { }\n\n  ngOnInit() {\n    this.data = this.route.snapshot.paramMap.get('userId');\n    this.appService.verifyEmail(this.data).subscribe(\n      Response => {\n        if (Response.status === 200) {\n          this.success=1;\n        }\n        else{\n          this.failure=1;\n        }\n        },\n      error => {\n       \n       \n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\" style=\\\"background-color: #67aee0;\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Meeting Planner Application</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">Signup</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\" style=\\\"background-color: #c9ced1;\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Email Address</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n       Warning : Email is invalid!\\n\\n      </div>\\n      <div *ngIf=\\\"emailId.errors?.required\\\">\\n       Warning : Email is required!\\n      </div>\\n    </div>\\n\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"sendResetLinkFunction()\\\">Send Reset Link</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public email : String;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public sendResetLinkFunction : any = () => {\n\n    if (!this.email) {\n      this.toastr.warning('enter email address')\n    }\n    this.appService.sendResetLink(this.email)\n      .subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Reset Link Sent SuccessFully\", \"Success!\");\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 2000);\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error! Try Again\");\n        }\n      },\n        (error) => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        });\n\n  }//end of sendResetLink \n\n\n  public goToSignUp() {\n    this.router.navigate(['/signup']);\n  }//end goToSignUp\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\" style=\\\"background-color: #67aee0;\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Meeting Planner Application</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\" (click) = \\\"goToSignUp()\\\" >SignUp</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\" style=\\\"background-color: #c9ced1;\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required autofocus>\\n\\n    <br>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"  (keydown)=\\\"doLoginUsingKeypress($event)\\\" required>\\n\\n    <br>\\n\\n\\n    <a [routerLink]=\\\"['/forgot-password']\\\">Forgot Password ?</a>\\n\\n    <br><br>\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click) = \\\"signinFunction()\\\" >Sign in</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n//routing\nimport { Router } from '@angular/router';\n//cookie for Identifying user\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n//app service file\nimport { AppService } from './../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//for loading spinner\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: String;\n  public password: String;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public goToSignUp: any = () => {\n\n    this.router.navigate(['/signup']);\n\n  } // end goToSignUp\n\n  public signinFunction: any = () => {\n\n    if (!this.email) {\n    \n      this.toastr.warning('enter email')\n  \n    } else if (!this.password) {\n\n      this.toastr.warning('enter password')\n\n    } else {\n\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n\n      this.spinnerService.show();\n      this.appService.signin(data)\n        .subscribe((apiResponse) => {\n          console.log(apiResponse)\n              if (apiResponse.status === 200) {\n\n                Cookie.set('authToken', apiResponse.data.authToken);\n                Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n                Cookie.set('receiverName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n                this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n                \n                //   this.router.navigate(['/']);\n\n                setTimeout(()=>{\n              if(apiResponse.data.userDetails.isAdmin){\n                this.router.navigate(['/admin']);\n              }else{\n                this.router.navigate(['/general']);\n              }\n                },1000)\n\n              }\n              else {\n                setTimeout(()=>{\n                  this.spinnerService.hide();\n                  this.toastr.error(apiResponse.message);\n                },1000);\n              }\n\n        }, (err) => {\n\n          if(err.status == 404){\n            setTimeout(() => {\n              this.spinnerService.hide();\n              this.router.navigate(['/page-not-found']);\n  \n            },1000);\n          \n          }\n          else if(err.status == 500){\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.router.navigate(['/server-error']);\n            },1000)\n            \n          }\n          else if(err.status == 400){\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.toastr.error('Password incorrect')\n            })\n\n          }else{\n            setTimeout(()=>{\n              this.spinnerService.hide();\n              this.router.navigate(['/signup']);\n              this.toastr.error('Please, create account')\n            })\n\n          }\n\n\n        });\n\n    } // end condition\n\n  } // end signinFunction\n\n\n  public doLoginUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n\n      this.signinFunction();\n\n    }\n\n  } // end sendMessageUsingKeypress\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\"  style=\\\"background-color: #67aee0;\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Issue Tracker Tool</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" (click)=\\\"goToSignUp()\\\">SignUp</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\" style=\\\"background-color: #c9ced1;\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Password Reset</h2>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" #pass=\\\"ngModel\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\"\\n      [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"pass.errors?.pattern\\\">\\n        Warning : Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters!\\n      </div>\\n      <div *ngIf=\\\"pass.errors?.required\\\">\\n        Warning : Password is required!\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" #conPass=\\\"ngModel\\\" id=\\\"inputPassword1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"\\n      required>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"conPass.pristine || password==confirmPassword\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"password!=confirmPassword\\\">\\n        Warning : Password and Confirm Password does not match!\\n      </div>\\n      <div *ngIf=\\\"conPass.errors?.required\\\">\\n        Warning: Confirm Password is required!\\n      </div>\\n    </div>\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"resetPassword()\\\">Change Password</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public password: string;\n  public confirmPassword: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  public userId: string = this._route.snapshot.paramMap.get('userId');\n\n  public data: any = {};\n\n  public resetPassword = () => {\n\n    if (this.matchPassword()) {\n      this.data.userId = this.userId;\n      this.data.password = this.password;\n      this.appService.resetPassword(this.data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Password Reset Succesfull\", \"Success!\");\n            setTimeout(() => {\n              this.router.navigate(['/']);\n            }, 2000);\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          });\n    }\n    else {\n      this.toastr.error(\"Password Mismatch\", \"Error!\");\n    }\n  }\n\n  public matchPassword = () => {\n    if (this.password === this.confirmPassword) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }//end matchPassword\n\n  \n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\" style=\\\"background-color: #67aee0;\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Meeting Planner Application</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\" (click)=\\\"goToSignIn()\\\">SignIn</a>\\n\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\" style=\\\"background-color: #c9ced1;\\\">\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n  <div class=\\\"col-sm p-5\\\">\\n\\n    <h2 class=\\\"form-signin-heading\\\">Sign Up</h2>\\n\\n    <br>\\n    <div class=\\\"btn-group btn-group-toggle\\\" role=\\\"group\\\" data-toggle=\\\"buttons\\\" aria-label=\\\"Basic example\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"checkAdmin(false)\\\">Regular</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"checkAdmin(true)\\\">Admin</button>\\n    </div>\\n    <br>\\n    <br>\\n\\n    <span>FirstName: </span>\\n\\n    <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n\\n    <input type=\\\"text\\\" #first=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required autofocus>\\n\\n    <br>\\n    <div [hidden]=\\\"first.pristine || first.valid\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"first.errors?.pattern\\\">\\n        Warning : Please tart with Capital and contain only letters !\\n            <div *ngIf=\\\"first.errors?.minlength\\\">\\n              Warning : Minimum 2 letters required!\\n            </div>\\n      </div>\\n      <div *ngIf=\\\"first.errors?.required\\\">\\n        Warning : First Name is required!\\n      </div>\\n\\n    </div>\\n\\n\\n\\n    <span>LastName: </span>\\n\\n    <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n\\n    <input type=\\\"text\\\" #last=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n\\n    <br>\\n\\n    <div [hidden]=\\\"last.pristine || last.valid\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"last.errors?.pattern\\\">\\n        Warning : Please tart with Capital and contain only letters !\\n        <div *ngIf=\\\"last.errors?.minlength\\\">\\n          Warning : Minimum 2 letters required!\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"last.errors?.required\\\">\\n        Warning : Last Name is required!\\n      </div>\\n\\n    </div>\\n\\n\\n\\n    <span class=\\\"sub-heading\\\">UserName: </span>\\n  \\n    <label for=\\\"inputUserName\\\" class=\\\"sr-only\\\">UserName</label>\\n\\n    <input type=\\\"text\\\" #user=\\\"ngModel\\\" pattern=\\\"^[A-Z][A-za-z0-9- ]+$\\\" minlength=\\\"2\\\" id=\\\"inputUserName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\"\\n      class=\\\"form-control\\\" placeholder=\\\"UserName\\\" required>\\n    <br/>\\n\\n    <div [hidden]=\\\"user.pristine || user.valid\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"user.errors?.pattern\\\">\\n        Warning : User name should only start with Capital letter and contain only letters & digits !\\n        <div *ngIf=\\\"user.errors?.minlength\\\">\\n          Warning : User Name should contain minimum 2 letters!\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"user.errors?.required\\\">\\n        Warning : User Name is required!\\n      </div>\\n\\n\\n    </div>\\n\\n    <div *ngIf=\\\"isAdmin && userName\\\">\\n\\n      <div *ngIf=\\\"!validateUserName()\\\" class=\\\"alert alert-danger\\\">\\n\\n        Warning : Invalid User Name as admin, Please ends with \\\"-admin\\\"!\\n\\n      </div>\\n\\n\\n    </div>\\n\\n\\n    <span>Email: </span>\\n\\n    <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n    <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n       Warning : Email is invalid!\\n\\n      </div>\\n      <div *ngIf=\\\"emailId.errors?.required\\\">\\n       Warning : Email is required!\\n      </div>\\n    </div>\\n\\n    <span>Password: </span>\\n\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n    <input type=\\\"password\\\" #pass=\\\"ngModel\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n\\n    <br>\\n    <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"pass.errors?.pattern\\\">\\n       Warning : Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters!\\n      </div>\\n      <div *ngIf=\\\"pass.errors?.required\\\">\\n       Warning : Password is required!\\n      </div>\\n    </div>\\n\\n\\n    <span class=\\\"sub-heading\\\">Confirm Password: </span>\\n\\n    <label for=\\\"inputConPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\\n    <input type=\\\"password\\\" #conPass=\\\"ngModel\\\"  id=\\\"inputConPassword\\\" class=\\\"form-control\\\" name=\\\"conPass\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n      placeholder=\\\"Confirm Password\\\" required>\\n\\n    <br>\\n   \\n    <div [hidden]=\\\"conPass.pristine || password==confirmPassword\\\" class=\\\"alert alert-danger\\\">\\n       <div *ngIf=\\\"password!=confirmPassword\\\">\\n          Warning : Password and Confirm Password does not match!\\n       </div>\\n      <div *ngIf=\\\"conPass.errors?.required\\\">\\n          Warning: Confirm Password is required!\\n      </div>\\n    </div>\\n\\n    <span class=\\\"sub-heading\\\">Country: </span>\\n\\n    <label for=\\\"inputCountry\\\" class=\\\"sr-only\\\">Country</label>\\n    \\n    <select [(ngModel)]=\\\"countryName\\\" #Country=\\\"ngModel\\\"  name=\\\"countryName\\\" class=\\\"form-control\\\" \\n    id=\\\"inputCountry\\\" (change)=\\\"onChange()\\\" required>\\n       <option value=\\\"\\\" >Select</option>\\n      <option *ngFor=\\\"let country of finalCountryList\\\" [value]=\\\"country.key\\\">{{country.value}}</option>\\n    </select>\\n      <br>\\n      <div [hidden]=\\\"Country.valid || Country.pristine  \\\" class=\\\"alert alert-danger\\\">\\n      ** Country Name is required \\n      </div>\\n    \\n\\n    <span class=\\\"sub-heading\\\">Mobile: </span>\\n\\n    <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n    <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-text\\\">+{{code}}</div>\\n        <input type=\\\"number\\\" #mobileNum=\\\"ngModel\\\" pattern=\\\"^\\\\d{10}$\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"mobileNumber\\\"\\n        placeholder=\\\"Mobile\\\" required>\\n      </div>\\n \\n\\n    <br>\\n    <div [hidden]=\\\"mobileNum.valid || mobileNum.pristine\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"mobileNum.errors?.pattern\\\">\\n        Mobile Number should only start contain only 10 digits!\\n\\n      </div>\\n      <div *ngIf=\\\"mobileNum.errors?.required\\\">\\n        Mobile Number is required!\\n      </div>\\n    </div>\\n\\n\\n\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"signupFunction()\\\">Sign Up</button>\\n\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n//for importing the service\n//import for service\nimport { AppService } from '../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//import for spinner\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\n\n//for country sorting purpose\nimport { SortCountriesPipe } from '../../sort-countries.pipe';\n\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: string;\n  public lastName: string;\n  public mobileNumber: string;\n  public email: string;\n  public password: string;\n\n  public isAdmin: boolean = false;\n  public userName: string;\n  \n  public countryName: string =\"\";\n  public countryList:any;\n  public finalCountryList:any=[];\n  public codeList:any=[];\n  public code:string;\n\n  \n\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n    public sortCountries : SortCountriesPipe,\n    private spinner: Ng4LoadingSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.appService.getCountryList().subscribe(\n      Response=>{\n         this.countryList=Response;\n         for (var prop in this.countryList) {\n          this.finalCountryList.push({\n            'key': prop,\n            'value': this.countryList[prop]\n        });\n\n         }\n        this.finalCountryList=this.sortCountries.transform(this.finalCountryList);\n       \n      }\n    )\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate(['/']);\n  }//end of goToSign function\n\n\n\n  public signupFunction(): any {\n\n    if (!this.firstName) {\n      this.toastr.warning(\"First Name is required\", \"Warning!\");\n    }\n    else if (!this.lastName) {\n      this.toastr.warning(\"Last Name is required\", \"Warning!\");\n    }\n    else if (!this.userName) {\n      this.toastr.warning(\"User Name is required\", \"Warning!\");\n    }\n    else if (!this.mobileNumber) {\n      this.toastr.warning(\"Mobile Number is required\", \"Warning!\");\n    }\n    else if (!this.countryName) {\n      this.toastr.warning(\"Country is required\", \"Warning!\");\n    }\n    else if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    }\n    else {\n      this.spinner.show();\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: `+${this.code}-${this.mobileNumber}`,\n        email: this.email,\n        password: this.password,\n        userName: this.userName,\n        country: this.countryName,\n        isAdmin: this.isAdmin\n      }\n      this.appService.signup(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.spinner.hide();\n            this.toastr.success(\"Signed Up\", \"SuccesFull, Please verify your email\");\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 1000);//redirecting to signIn page\n\n          }\n          else {\n            this.spinner.hide();\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.spinner.hide();\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/server-error']);\n          });//end calling signUpFunction\n    }\n  }//end signUp function\n\n  public onChange=()=>{  \n    this.appService.getCountryCode().subscribe(\n      Response=>{\n        this.codeList=Response;\n       \n        this.code=this.codeList[this.countryName];\n  \n      }\n    )\n  }//end\n  \n  public checkAdmin(flag:boolean){\n\n    this.isAdmin = flag;\n\n  }//end checkAdmin\n  public validateUserName(){\n\n    if(this.userName.indexOf(\"admin\") != -1){\n      return true;\n    }else{\n      return false;\n    }\n\n  }//end validateUserName\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n//for router module and form module\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { EmailVerifyComponent } from './email-verify/email-verify.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path:'signup',component:SignupComponent},\n      {path:'forgot-password', component:ForgotPasswordComponent},\n      {path:'email-verify/:userId' ,component: EmailVerifyComponent},\n      {path:'reset-password/:userId',component:ResetPasswordComponent}\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent, EmailVerifyComponent, ForgotPasswordComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}